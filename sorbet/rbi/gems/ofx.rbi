# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/ofx/all/ofx.rbi
#
# ofx-543c18cc66aa

module OFX
end
class OFX::UnsupportedFileError < StandardError
end
module OFX::Parser
end
class OFX::Parser::Base
  def body; end
  def content; end
  def convert_to_utf8(string); end
  def headers; end
  def initialize(resource); end
  def open_resource(resource); end
  def parser; end
  def prepare(content); end
end
class OFX::Parser::OFX102
  def account; end
  def accounts; end
  def body; end
  def build_account(node); end
  def build_amount(element); end
  def build_available_balance(node); end
  def build_balance(node); end
  def build_date(date); end
  def build_sign_on; end
  def build_statement(node); end
  def build_status(node); end
  def build_transaction(element); end
  def build_transactions(node); end
  def build_type(element); end
  def headers; end
  def html; end
  def initialize(options = nil); end
  def self.parse_headers(header_text); end
  def sign_on; end
  def statements; end
  def to_decimal(amount); end
end
class OFX::Parser::OFX103 < OFX::Parser::OFX102
end
class OFX::Parser::OFX211 < OFX::Parser::OFX102
  def self.extract_headers(text); end
  def self.parse_headers(header_text); end
  def self.strip_quotes(s); end
end
class OFX::Foundation
  def initialize(attrs); end
end
class OFX::Balance < OFX::Foundation
  def amount; end
  def amount=(arg0); end
  def amount_in_pennies; end
  def amount_in_pennies=(arg0); end
  def posted_at; end
  def posted_at=(arg0); end
end
class OFX::Account < OFX::Foundation
  def available_balance; end
  def available_balance=(arg0); end
  def balance; end
  def balance=(arg0); end
  def bank_id; end
  def bank_id=(arg0); end
  def currency; end
  def currency=(arg0); end
  def id; end
  def id=(arg0); end
  def transactions; end
  def transactions=(arg0); end
  def type; end
  def type=(arg0); end
end
class OFX::SignOn < OFX::Foundation
  def fi_id; end
  def fi_id=(arg0); end
  def fi_name; end
  def fi_name=(arg0); end
  def language; end
  def language=(arg0); end
  def status; end
  def status=(arg0); end
end
class OFX::Status < OFX::Foundation
  def code; end
  def code=(arg0); end
  def message; end
  def message=(arg0); end
  def severity; end
  def severity=(arg0); end
  def success?; end
end
class OFX::Statement < OFX::Foundation
  def account; end
  def account=(arg0); end
  def available_balance; end
  def available_balance=(arg0); end
  def balance; end
  def balance=(arg0); end
  def currency; end
  def currency=(arg0); end
  def end_date; end
  def end_date=(arg0); end
  def start_date; end
  def start_date=(arg0); end
  def transactions; end
  def transactions=(arg0); end
end
class OFX::Transaction < OFX::Foundation
  def amount; end
  def amount=(arg0); end
  def amount_in_pennies; end
  def amount_in_pennies=(arg0); end
  def check_number; end
  def check_number=(arg0); end
  def fit_id; end
  def fit_id=(arg0); end
  def memo; end
  def memo=(arg0); end
  def name; end
  def name=(arg0); end
  def occurred_at; end
  def occurred_at=(arg0); end
  def payee; end
  def payee=(arg0); end
  def posted_at; end
  def posted_at=(arg0); end
  def ref_number; end
  def ref_number=(arg0); end
  def sic; end
  def sic=(arg0); end
  def type; end
  def type=(arg0); end
end
module OFX::Version
end
class Object < BasicObject
  def OFX(resource, &block); end
end
